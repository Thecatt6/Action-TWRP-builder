name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/AndroidHQ254/toco_twrp'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 't13'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/toco'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'toco'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'twrp_toco'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # You can use either of the ubuntu-18.04 or ubuntu-20.04 runner
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"
 
    # You might want to Checkout your repo first, but not mandatory
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
      # That's it! Now use your normal steps

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev \
        libncurses-dev libncurses5-dev libncurses5-dev:i386 x11proto-core-dev libx11-dev tree \
        lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev \
        liblz4-tool libsdl1.2-dev libwxgtk3.2-dev libxml2 lzop pngcrush schedtool squashfs-tools \
        imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev python3
   
    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}
